generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Todo {
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  title       String     @db.VarChar(255)
  description String     @default("")
  status      TodoStatus @default(PENDING)
  id          String     @id @db.Char(26)
  userId      String     @db.Char(26)
  user        User       @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@index([id, userId])
  @@index([createdAt(sort: Asc), id(sort: Asc)], map: "Todo_createdAt_id_idx")
  @@index([createdAt(sort: Desc), id(sort: Desc)], map: "Todo_createdAt_desc_id_desc_idx")
  @@index([updatedAt(sort: Asc), id(sort: Asc)], map: "Todo_updatedAt_id_idx")
  @@index([updatedAt(sort: Desc), id(sort: Desc)], map: "Todo_updatedAt_desc_id_desc_idx")
}

model User {
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String   @db.VarChar(255)
  email     String   @unique @db.VarChar(255)
  password  String   @db.VarChar(255)
  token     String?  @unique @db.Char(26)
  role      Role     @default(USER)
  id        String   @id @db.Char(26)
  todos     Todo[]

  @@index([createdAt(sort: Asc), id(sort: Asc)], map: "User_createdAt_id_idx")
  @@index([createdAt(sort: Desc), id(sort: Desc)], map: "User_createdAt_desc_id_desc_idx")
  @@index([updatedAt(sort: Asc), id(sort: Asc)], map: "User_updatedAt_id_idx")
  @@index([updatedAt(sort: Desc), id(sort: Desc)], map: "User_updatedAt_desc_id_desc_idx")
}

enum TodoStatus {
  DONE
  PENDING
}

enum Role {
  ADMIN
  USER
}
